name: CI/CD Workflow

on:
  push:
    branches:
      - master

env:
  DOCKER_VERSION: 5:27.3.1
  DOCKER_COMPOSE_VERSION: 2.29.2
  DOCKER_COMPOSE_FILE: docker-compose.yml

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Docker images
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Install Docker with specific version
        run: sh ./install_docker.sh
        working-directory: ./.github/workflows/scripts

      - name: Install Docker Compose with specific version
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v${{ env.DOCKER_COMPOSE_VERSION }}/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker compose --version

      - name: Check if docker compose is available before proceeding
        run: which docker-compose || { echo "docker compose is not installed or not in PATH"; exit 1; }

      - name: Start and setup the container
        id: docker-start
        run: docker compose up --scale jenkins_agent=2 -d
        working-directory: ./docker/jenkins

      - name: Test Jenkins server is up and running
        run: sh ./docker/jenkins/tests/test_jenkins.sh

      - name: Test Jenkins agents are online and connected
        run: sh ./docker/jenkins/tests/test_agents.sh

      - name: Debug Running Containers
        run: docker ps -a

      - name: Collect Docker container logs
        if: ${{ always() }}
        run: |
          for container in $(docker ps -a --format '{{.Names}}'); do
            echo "---- Logs for $container ----"
            docker logs "$container" | sed "s/^/[$container] /"
            echo "---- End of logs for $container ----"
          done

      - name: Clean up Docker containers and volumes
        if: ${{ always() }}
        run: |
          [ -f "${{ env.DOCKER_COMPOSE_FILE }}" ] || { echo "Compose file not found!"; exit 1; }
          if docker compose ps -q | grep -q .; then
            docker compose -f ${{ env.DOCKER_COMPOSE_FILE }} down --volumes --remove-orphans
          else
            echo "No containers to clean up."
          fi
        working-directory: ./docker/jenkins
