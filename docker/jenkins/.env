JENKINS_USER=jenkins
JENKINS_PORT=8080
JENKINS_AGENT_PORT=50000
JENKINS_ADMIN_PASSWORD=Admin@123
JENKINS_CI_USER_PASSWORD=cI_User@123
JENKINS_CASC_CONFIG=/var/jenkins_home/casc_configs
JENKINS_CPU_LIMIT=1
JENKINS_MEMORY_LIMIT=1.5G
JENKINS_CPU_RESERVATION=0.5
JENKINS_MEMORY_RESERVATION=1G
JENKINS_AGENT_REMOTEFS=/home/jenkins/agent

# Docker-in-Docker (dind) Configuration
# --------------------------------------
# Docker-in-Docker (dind) allows running Docker inside a Docker container.
# This is useful in CI/CD pipelines where we need to build and run containers dynamically.
#
# Why is this needed?
# - Enables Jenkins or other CI/CD tools to build and run Docker containers.
# - Allows running isolated Docker environments inside containers.
# - Provides flexibility for containerized builds and testing.
#
# Set DOCKER_TLS_CERTDIR to empty to disable TLS so it listens on 2375
DOCKER_TLS_CERTDIR=/certs
DOCKER_CLIENT_TLS_CERTDIR=/certs/client
DIND_CPU_LIMIT=1
DIND_MEMORY_LIMIT=1G
DIND_CPU_RESERVATION=0.5
DIND_MEMORY_RESERVATION=512M

# DOCKER_DAEMON_URL: Specifies the Docker daemon inside the dind container, allowing
# other containers (like builder) to communicate with it.
DOCKER_DAEMON_URL=tcp://docker:2376

# Docker Registry Configuration
# ------------------------------
# The Docker registry is a storage system for Docker images. It allows you to
# build, store, and distribute container images within your local network.
#
# Why is this needed?
# - Avoids relying on Docker Hub for image storage.
# - Speeds up deployments by keeping images locally.
# - Enables controlled access to container images.
REGISTRY_PORT=5000
REGISTRY_USER=admin
REGISTRY_URL=registry:5000
REGISTRY_PASSWORD=SuperSecretPassword
REGISTRY_HTTP_SECRET=here-is-the-secret
JENKINS_DOCKER_AGENT_IMAGE_PATH=registry:5000/jenkins_agent:latest
