jobs:
  - script: >
      def getEnvVar(String varName) {
        def value = System.getenv(varName)
        if (!value) {
          throw new RuntimeException("Missing required env var: " + varName)
        }
        return value
      }

      def enableJobGenerator = Boolean.valueOf(System.getenv('ENABLE_SEED_JOB') ?: 'false')

      if (enableJobGenerator) {
        def repoUrl = getEnvVar('SEED_JOB_REPO_URL')
        def jobName = getEnvVar('SEED_GENERATOR_JOB_NAME')
        def repoBranch = getEnvVar('SEED_JOB_REPO_BRANCH')
        def pipelineScriptPath = getEnvVar('SEED_JOB_SCRIPT_PATH')
        def repoCredentialId = getEnvVar('SEED_JOB_REPO_CREDENTIAL_ID')
        def jobDescription = getEnvVar('SEED_GENERATOR_JOB_DESCRIPTION')

        pipelineJob(jobName) {
          description(jobDescription)

          // Prevents concurrent builds of this job
          properties {
            disableConcurrentBuilds()
          }

          environmentVariables {
            env('JENKINS_AGENT_SHARED_METADATA_DIR', "${JENKINS_AGENT_SHARED_METADATA_DIR}")
          }

          definition {
            cpsScm {
              scm {
                git {
                  remote {
                    url(repoUrl)
                    credentials(repoCredentialId)
                  }
                  branches(repoBranch)
                }
              }
              scriptPath(pipelineScriptPath)
            }
          }
        }
      }
